Как в  Grafana настроить  дашборды с CPU, mem, disk usage для ub1srv, ub2srv и cnt3srv ?

Для настройки дашбордов в Grafana с метриками CPU, Memory и Disk usage для серверов ub1srv, ub2srv и cnt3srv, выполните следующие шаги:

1. Установите и настройте источник данных:

Для мониторинга серверов вы можете использовать различные системы мониторинга, такие как Prometheus, InfluxDB, Graphite, Zabbix и многие другие. Вы должны установить и настроить один из них на каждом сервере (ub1srv, ub2srv, cnt3srv). Рассмотрим пример с Prometheus и Node Exporter:

1.1. Установите Prometheus на сервере, который будет отвечать за агрегацию данных с мониторинга. Инструкция по установке доступна в официальной документации: https://prometheus.io/docs/prometheus/latest/installation/

1.2. Установите Node Exporter на каждом из серверов (ub1srv, ub2srv, cnt3srv), чтобы собирать метрики CPU, Memory и Disk usage. Инструкция по установке доступна здесь: https://prometheus.io/docs/guides/node-exporter/

1.3. Настройте конфигурацию Prometheus, чтобы он подключался к Node Exporter'ам на всех серверах. В файле prometheus.yml добавьте блок `scrape_configs` с настройками для каждого сервера:

scrape_configs:
  - job_name: 'ub1srv'
    static_configs:
      - targets: ['ub1srv:9100']
  - job_name: 'ub2srv'
    static_configs:
      - targets: ['ub2srv:9100']
  - job_name: 'cnt3srv'
    static_configs:
      - targets: ['cnt3srv:9100']


1.4. Перезапустите Prometheus и убедитесь, что метрики собираются.

2. Добавьте источник данных в Grafana:

2.1. Войдите в веб-интерфейс Grafana и перейдите в раздел "Настройки" (Settings) → "Data Sources" → "Add data source".

2.2. Выберите тип источника данных, в нашем случае - "Prometheus".

2.3. Введите URL сервера с Prometheus и нажмите "Save & Test".

3. Создайте дашборд с панелями для метрик CPU, Memory и Disk usage:

3.1. В Grafana перейдите в раздел "Dashboards" → "Manage" → "New Dashboard".

3.2. Нажмите на "Add new panel" и создайте необходимые панели для метрик CPU, Memory и Disk usage. Можете использовать следующие примеры:

- CPU usage:
  - Query: `100 - (avg by(instance)(irate(node_cpu_seconds_total{mode="idle",job=~"ub1srv|ub2srv|cnt3srv"}[5m])) * 100)`
  - Legend format: `{{instance}}`
  - Visualization: Graph / Gauge

- Memory usage:
  - Query: `((node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes{job=~"ub1srv|ub2srv|cnt3srv"}) / node_memory_MemTotal_bytes{job=~"ub1srv|ub2srv|cnt3srv"}) * 100`
  - Legend format: `{{instance}}`
  - Visualization: Graph / Gauge

- Disk usage:
  - Query: `((node_filesystem_size_bytes{fstype!="rootfs",job=~"ub1srv|ub2srv|cnt3srv"} - node_filesystem_free_bytes{fstype!="rootfs",job=~"ub1srv|ub2srv|cnt3srv"}) / node_filesystem_size_bytes{fstype!="rootfs",job=~"ub1srv|ub2srv|cnt3srv"}) * 100`
  - Legend format: `{{instance}}:{{mountpoint}}`
  - Visualization: Graph / Gauge

Вы можете отрегулировать запросы в соответствии с вашими требованиями и добавить другие панели, графики и графические элементы.

4. Сохраните ваш дашборд:

После настройки всех панелей, нажмите "Save" в правом верхнем углу и сохраните ваш дашборд. Теперь у вас есть дашборд в Grafana с метриками CPU, Memory и Disk usage для серверов ub1srv, ub2srv и cnt3srv.

Если вы хотите сделать свои дашборды более информативными и полезными, расширьте свою текущую конфигурацию, следуя указанным ниже рекомендациям:

1. Группировка панелей:

Добавьте "Row" или "Folder" на вашем дашборде для группировки панелей по категориям, например, CPU, Memory и Disk usage.

2. Использование переменных:

Вы можете использовать переменные в вашем дашборде для облегчения настройки и предоставления пользовательских опций для выбора сервера, метрик и диапазона дат.

2.1. Добавьте переменную сервера:

- Перейдите в "Dashboard settings" → "Variables" → "New".
- Создайте новую переменную с именем "server".
- Выберите тип "Query".
- Data source: "Prometheus".
- В поле "Query" введите: `label_values(job)`
- Опция "Multi-value" позволит выбирать несколько серверов за один раз.
- Сохраните переменную.

2.2. Используйте переменную сервера в панелях:

- Отредактируйте запросы на всех панелях, заменив фильтр job, например: `job=~"$server"`.

3. Использование шаблонов дашбордов:

Вы можете изучить готовые дашборды для Prometheus и Node Exporter, доступные на официальном сайте Grafana: https://grafana.com/grafana/dashboards

Например, популярный шаблон "Node Exporter Full" (ID 1860) позволяет мониторить множество метрик для ваших серверов. Чтобы установить этот шаблон:

- Перейдите в раздел "Dashboards" → "Manage".
- Нажмите на "Import".
- Введите ID "1860" и нажмите "Load".
- Выберите источник данных "Prometheus" и нажмите "Import".

Теперь у вас есть готовый и полнофункциональный дашборд. Вы можете настроить его в соответствии с вашими требованиями, добавлять или удалять панели и метрики.

4. Создание оповещений:

Вы можете настроить оповещения на основе метрик, чтобы получать уведомления о проблемах с вашими серверами. Прочитайте официальную документацию Grafana по настройке оповещений: https://grafana.com/docs/grafana/latest/alerting/

5. Настройка разных источников данных:

Grafana поддерживает множество других источников данных, помимо Prometheus, например, InfluxDB, Zabbix, AWS CloudWatch и других. Вы можете настроить различные источники данных и использовать их для отслеживания разных метрик на вашем дашборде.

6. Использование аннотаций:

Аннотации позволяют добавить на график меток с информацией о событиях, таких как изменения конфигурации или процедуры обслуживания, которые могут повлиять на метрики. Аннотации могут храниться в различных источниках данных или получены при помощи запроса к каждому источнику данных.
Для настройки аннотаций:

- Перейдите в "Dashboard settings" → "Annotations" → "New".
- Заполните имя, источник данных и запрос для получения аннотаций.
- Сохраните аннотацию.

7. Интеграция с внешними инструментами:

Grafana интегрируется с различными внешними инструментами, такими как системы управления инцидентами (PagerDuty, VictorOps и другие), Службами оповещения (Email, Slack, Telegram и другие) и системами мониторинга (Prometheus Alertmanager, Influxdb и другие). Узнайте больше о поддерживаемых интеграциях и плагинах: https://grafana.com/plugins

8. Создание пользовательских плагинов:

Если вам необходимо добавить функциональность, которая не предоставляется штатными компонентами Grafana, вы можете создать свои плагины, такие как панели, источники данных и аппы. Вы можете использовать официальное руководство по разработке плагинов: https://grafana.com/docs/grafana/latest/developers/plugins/

9. Мониторинг самой Grafana:

Вы также можете использовать Grafana для мониторинга метрик самой Grafana. Это поможет определить время, за которое Grafana обрабатывает запросы, количество пользователей и другие полезные данные, которые могут помочь в оптимизации и улучшении сервера Grafana. Чтобы установить предварительно настроенный дашборд Grafana, перейдите по ссылке https://grafana.com/grafana/dashboards/10229.

10. Резервное копирование и восстановление:

Регулярно создавайте резервные копии ваших конфигураций Grafana и дашбордов, чтобы иметь возможность восстановить их в случае потери или ошибки. Используйте официальное руководство по резервному копированию и восстановлению: https://grafana.com/docs/grafana/latest/administration/backup-and-restore/

Эти рекомендации помогут вам настроить и оптимизировать вашу среду мониторинга, используя Grafana и другие инструменты. Учитывайте свои собственные потребности, структуру и инфраструктуру при настройке дашбордов и панелей.

